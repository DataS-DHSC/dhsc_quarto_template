---
title: 'GOVUK Template'
output-file: GOVUK_HTML_example
format:
  govuk-html
execute:
  echo: false
  warning: false
---

This template is an example of how to write a report in the **GOV.UK** style.

You can edit this file and press the `Render` button to produce a HTML document.

When using the GOVUK template, use two hash symbols for headings and three hash
symbols for subheadings.

You can learn more about controlling the appearance of HTML output on the [quarto website](https://quarto.org/docs/output-formats/html-basics.html).

## A heading

Some text here....

### A subheading

Text under a subheading...

## Further heading

More text here...

### A Subheading

Different text here...

### Another Subheading

More text here...

## Quarto HTML tips

Example of adding a table using the htmlTable package.

```{r Data table}

library(htmlTable)

htmlTable(head(iris, 10), rnames = FALSE)

```

Example of producing an interactive chart using the plotly package.

```{r Chart}

library(plotly)

fig <- plot_ly(
  data = iris,
  x = ~Sepal.Length,
  y = ~Petal.Length
) |> 
  config(displaylogo = FALSE,
         modeBarButtons = list(list("toImage")),
         toImageButtonOptions = list(format = "svg",
                                     filename = "Chart",
                                     width = 900,
                                     height = 640))

fig

```

Example of producing a tabset.

::: panel-tabset
## Tab 1

Text on tab 1.

## Tab 2

Text on tab 2.
:::

## GOVUK specific template features

Create a GOVUK styled button to download a dataset. This uses the downloadthis package and the "govuk-button govuk-button--secondary" class provided by GOVUK template.

```{r Download button}

library(downloadthis)

iris |>
  download_this(
    output_name = 'My data',
    output_extension = ".csv",
    button_label = "Download data",
    button_type = "default",
    has_icon = FALSE,
    icon = "arrow-down-to-line",
    self_contained = TRUE,
    class = "govuk-button govuk-button--secondary",
    csv2 = FALSE
  )

```

An example of adding an "expander" to provide a drop down with further information

```{r expander}
#| results: "asis"

source('Scripts/html_functions.R')

expander(title = 'Further information', 
         details = 'Details of the section that you may not want to show as part of the main page but as extra information for anyone particularly interested.')

```
